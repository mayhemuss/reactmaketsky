{"version":3,"sources":["Pages/style.module.css","Components/AdressTable/Fulladress.module.css","Components/SmallTable/smalltable.module.css","Components/Instruction/instrutions.module.css","Pages/printhide.module.css","Components/SmallTable/bignumber.module.css","images/logo_img.svg","images/logo_text.svg","Components/Settings/laddernamesettings.module.css","Pages/landing.module.css","Components/Instruction/1exel.xlsx","Components/Settings/sizesettings.module.css","fonts/heliosBold.eot","fonts/heliosBold1.woff","fonts/heliosBold2.woff2","Components/Instruction/Instruction.jsx","store/selectors.js","Components/Table/Adress.jsx","Components/Table/LadderNum.jsx","Components/Table/Line.jsx","Components/Table/Table.jsx","Components/Table/AddLogo.jsx","store/reducers/settingSlice.js","function/paddingCorrector.js","Components/Table/ColorBackGround.jsx","Components/Table/TopLine.jsx","Components/Table/FullTable.jsx","function/tableSizeCorrector.js","Components/Table/MyRadio.jsx","store/reducers/tableSettingsSlice.js","Components/Settings/TableSettings.jsx","store/reducers/entrancesSlice.js","Components/Settings/EntaranceInput.jsx","Components/MyCheckBox.jsx","Components/Settings/TableHeadSettings.jsx","Components/Settings/LadderNameSettings.jsx","Components/Settings/SizeSettings.jsx","Components/Settings/ChoseEntarance.jsx","Pages/EnteranceTablePage.jsx","Pages/LandingPage.jsx","Components/SmallTable/ShortEnterance.jsx","Components/SmallTable/SmallTable.jsx","Pages/SmallTablePage.jsx","Components/AdressTable/AdressLetter.jsx","Components/AdressTable/FullAdressName.jsx","Components/AdressTable/FullAdressTable.jsx","Components/Settings/AdressSizeSettings.jsx","Pages/AdressTablePage.jsx","Components/SmallTable/BigNumber.jsx","Pages/BigNumberEnterancePage.jsx","function/randomrooms.js","function/createDownloadFile.js","Pages/RoomsCounterRandom.jsx","App.js","store/index.js","index.js"],"names":["module","exports","container_horizontal","container_vertical","settings","full_table","table_container","adress_container","adress_name","logo","bottom","type","typeContent","typeAndLogo","number","numberContent","container","content_container","adress","bottom_container","ladder_number","rooms","logo_container","logo_img","logo_text","print_hide","table","top_table","ladder_name","big_number","short_enterance","__webpack_require__","p","form","Instruction","_ref","height","width","orientering","navigate","useNavigate","currentHeight","currentWidth","React","createElement","className","styles","onClick","replace","download","href","file","settingsSelector","state","entrancesSelector","entrances","tableSelector","Adress","haveAdress","adressSize","useSelector","Fragment","style","fontSize","toUpperCase","LadderNum","haveLadderNum","_useSelector","currentEntarance","headType","styleType","sizeStyle","Line","thisFloor","roomStart","roomEnd","floor","isNaN","Table","entrance","_useSelector2","isReverseTable","current","long","ladder","_toConsumableArray","reverse","map","elem","key","AddLogo","size","logoRef","ref","alt","src","settingSlice","createSlice","name","initialState","haveTableTop","headTypes","streetNameSize","streetTypeSize","buildingNumberSize","buildingNumberIndent","streetTypeGap","reducers","setStreetNameSize","payload","setStreetTypeSize","_ref2","setBuildingNumberSize","_ref3","setBuildingNumberIndent","_ref4","setStreetTypeGap","_ref5","setAdressSize","_ref6","AdressSizeDecriment","AdressSizeIncriment","setHaveAdress","setHaveLadderNum","setHaveTableTop","setIsReverseTable","setCurrentEntarance","action","setHeadType","_ref7","setFontSize","_ref8","changeFontSize","_ref9","addHeadTypes","_ref10","concat","_settingSlice$actions","actions","setIdealSize","paddingCorrector","ColorBackGround","allTableSize","currentTableSize","borderTop","borderRight","top","TopLine","haveTableHead","FullTable","dispatch","useDispatch","_useSelector3","createRef","allTableRef","useEffect","correctHeight","offsetTop","clientHeight","tableHeight","getBoundingClientRect","tableSizeCorrector","document","title","id","ladderN","MyRadio","val","callBack","children","value","onChange","checked","tableSettingsSlice","currentType","addTableSize","setCurrentTableSize","_tableSettingsSlice$a","TableSettings","_useState","useState","_useState2","_slicedToArray","addButton","setAddButton","_useState3","_useState4","tableType","setTableType","setTablewidthHandler","e","target","addTogle","prev","inputHandler","event","index","onSubmit","preventDefault","placeholder","entriesSlice","streetName","streetType","buildingNumber","1","short","start","end","2","allEntrances","setAdress","setEntarance","setAllEntarence","setBuildingNumber","setStreetType","setStreetName","_entriesSlice$actions","EntaranceInput","inputData","setInputData","parse","JSON","entranceCount","Object","keys","undefined","toLowerCase","error","console","log","MyCheckBox","TableHeadSettings","onclickHandler","func","LadderNameSettings","props","newType","setNewType","headTypeHandler","types","SizeSettings","Number","ChoseEntarance","currentEntaranceHandler","EnteranceTablePage","print","LandingPage","button","ShortEnterance","SmallTable","SmallTablePage","gap","AdressLetter","FullAdressName","split","FullAdressTable","letterSpacing","marginRight","AdressSizeSettings","streetNameSizeState","setStreetNameSizeState","streetTypeSizeState","setStreetTypeSizeState","_useState5","_useState6","buildingNumberSizeState","setBuildingNumberSizeState","_useState7","_useState8","buildingNumberIndentState","setBuildingNumberIndentState","_useState9","_useState10","streetTypeGapState","setStreetTypeGapState","display","flexDirection","AdressTablePage","BigNumber","BigNumberEnterancePage","randomcounter","count","parts","alert","result","part","i","push","allRooms","array","length","j","Math","random","shuffle","splice","ceil","obj","forEach","counts","apartaments","sort","a","b","join","createDownloadFile","data","encodeURIComponent","link","click","RoomsCounterRandom","inputValue","setInputValue","complite","setComplite","partCount","setPartCount","_objectSpread","apartmentsCount","jsonString","stringify","App","BrowserRouter","Routes","Route","path","element","rootReducer","combineReducers","entrancesSlice","store","configureStore","reducer","ReactDOM","createRoot","getElementById","render","Provider"],"mappings":"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","file":"static/js/main.a1d587e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_horizontal\":\"style_container_horizontal__1IN91\",\"container_vertical\":\"style_container_vertical__3ufhH\",\"settings\":\"style_settings__3HXIM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"full_table\":\"Fulladress_full_table__2fPuG\",\"table_container\":\"Fulladress_table_container__1Qa9Q\",\"adress_container\":\"Fulladress_adress_container__3NLD-\",\"adress_name\":\"Fulladress_adress_name__3bPmF\",\"logo\":\"Fulladress_logo__1Wokj\",\"bottom\":\"Fulladress_bottom__F64vl\",\"type\":\"Fulladress_type__1p1ll\",\"typeContent\":\"Fulladress_typeContent__3Kcj2\",\"typeAndLogo\":\"Fulladress_typeAndLogo__3VpsU\",\"number\":\"Fulladress_number__MUIt8\",\"numberContent\":\"Fulladress_numberContent__1vwjY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"full_table\":\"smalltable_full_table__LR4so\",\"container\":\"smalltable_container__2vRhk\",\"content_container\":\"smalltable_content_container__SjCTy\",\"adress\":\"smalltable_adress__13vRw\",\"bottom_container\":\"smalltable_bottom_container__3dklT\",\"ladder_number\":\"smalltable_ladder_number__eVlVG\",\"rooms\":\"smalltable_rooms__3xkpd\",\"logo_container\":\"smalltable_logo_container__1uqqL\",\"logo_img\":\"smalltable_logo_img__3l_I9\",\"logo_text\":\"smalltable_logo_text__38DDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"instrutions_container__2BfW9\",\"print_hide\":\"instrutions_print_hide__2xHf3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"print_hide\":\"printhide_print_hide__1ITcE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"full_table\":\"bignumber_full_table__3p0Z8\",\"table_container\":\"bignumber_table_container__TApii\",\"table\":\"bignumber_table__oqxf6\",\"top_table\":\"bignumber_top_table__33lRd\",\"ladder_name\":\"bignumber_ladder_name__1ytYs\",\"big_number\":\"bignumber_big_number__3HemF\",\"short_enterance\":\"bignumber_short_enterance__28bKQ\"};","module.exports = __webpack_public_path__ + \"static/media/logo_img.45f5346b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_text.4f660b6f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"laddernamesettings_form__37s25\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"landing_container__rkMeU\"};","module.exports = __webpack_public_path__ + \"static/media/1exel.1855c072.xlsx\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sizesettings_container__3Bf81\"};","module.exports = __webpack_public_path__ + \"static/media/heliosBold.0377a208.eot\";","module.exports = __webpack_public_path__ + \"static/media/heliosBold1.b3962430.woff\";","module.exports = __webpack_public_path__ + \"static/media/heliosBold2.1f03385e.woff2\";","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./instrutions.module.css\";\r\nimport file from \"./1exel.xlsx\";\r\n\r\nfunction Instruction({ height, width, orientering }) {\r\n  const navigate = useNavigate();\r\n\r\n  const LISTHEIGHT = 841;\r\n  const LISTWIDTH = 594;\r\n  const LEFTINDENT = 13;\r\n  const TOPINDENT = 13;\r\n\r\n  const currentHeight = height + 200 > width ? LISTHEIGHT : LISTWIDTH;\r\n  const currentWidth = height + 200 > width ? LISTWIDTH : LISTHEIGHT;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <button\r\n        className={styles.print_hide}\r\n        onClick={() => navigate(\"/\", { replace: false })}\r\n      >\r\n        назад\r\n      </button>\r\n      <div className={styles.print_hide}>\r\n        <a\r\n         \r\n          download=\"1!форма экселя для табличек.xlsx\"\r\n          href={file}\r\n        >\r\n          скачать форму экселя\r\n        </a>\r\n      </div>\r\n      <div>\r\n        размер таблички: {width}*{height}\r\n      </div>\r\n      <div className={styles.print_hide}>печать с размером листа А1</div>\r\n      <div className={styles.print_hide}>\r\n        в{\" \"}\r\n        <b>\r\n          {\" \"}\r\n          {orientering === \"horizontal\"\r\n            ? \"Альбомном формате\"\r\n            : \"Портретном формате\"}\r\n        </b>\r\n      </div>\r\n      <div className={styles.print_hide}>c полями по умолчанию</div>\r\n      <div className={styles.print_hide}>с маштабом по умолчанию</div>\r\n      <div className={styles.print_hide}>с отлюченными колонтикулами</div>\r\n      <div className={styles.print_hide}>с включеным фоном</div>\r\n      <div>отступы для Adobe Acrobat:</div>\r\n      <div>сверху: {TOPINDENT}</div>\r\n      <div>снизу: {currentHeight - TOPINDENT - height + 1}</div>\r\n      <div>слева: {LEFTINDENT}</div>\r\n      <div>справа: {currentWidth - LEFTINDENT - width + 1} </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Instruction;\r\n","export const settingsSelector = (state) => state.settings;\r\nexport const entrancesSelector = (state) => state.entrances;\r\nexport const tableSelector = (state) => state.table;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { entrancesSelector, settingsSelector } from \"../../store/selectors\";\r\n\r\nfunction Adress({ type, haveAdress }) {\r\n  const { adressSize } = useSelector(settingsSelector);\r\n  const { adress } = useSelector(entrancesSelector);\r\n\r\n  return (\r\n    <>\r\n      {haveAdress && (\r\n        <div\r\n          style={{ fontSize: adressSize , height: \"60%\"}}\r\n          className={\r\n            \"base flex adress \" +\r\n            (type === \"sticker\" ? \"base_white_black\" : \"base_blue_white\")\r\n          }\r\n        >\r\n          {adress.toUpperCase()}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Adress;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { settingsSelector } from \"../../store/selectors\";\r\n\r\nfunction LadderNum({ width, type, haveLadderNum }) {\r\n  const { currentEntarance, headType } = useSelector(settingsSelector);\r\n  const styleType =\r\n    type === \"sticker\" ? \"base_white_black \" : \"base_blue_white \";\r\n  const sizeStyle = width > 190 ? \"big_ladderN\" : \"small_ladderN\";\r\n  return (\r\n    <>\r\n      {haveLadderNum && (\r\n        <div style={{height:\"60%\"}}\r\n         className={\"base flex \" + styleType + sizeStyle}>\r\n          {headType.toUpperCase()}\r\n          {currentEntarance}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LadderNum;\r\n","import React from \"react\";\r\n\r\nfunction Line({ thisFloor, style, type }) {\r\n  const { roomStart, roomEnd, floor } = thisFloor;\r\n  const styleType =\r\n    type === \"sticker\" ? \"base_white_black \" : \"base_blue_white \";\r\n  return (\r\n    <div className=\"flex row line\" style={style}>\r\n      <div className={\"base collumn1 flex row \" + styleType}>{floor}</div>\r\n      <div className={\"base collumn2 flex row \" + styleType}>\r\n        {roomStart === \"\" ? (\r\n          <>{roomEnd}</>\r\n        ) : isNaN(roomEnd) ? (\r\n          <>{roomStart + \" – \" + roomEnd}</>\r\n        ) : (\r\n          <>\r\n            <div className=\"left flex\">{roomStart}</div>\r\n            <div className=\"center flex\">–</div>\r\n            <div className=\"right flex\">{roomEnd}</div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Line;\r\n","import React from \"react\";\r\nimport Line from \"./Line\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { entrancesSelector, settingsSelector } from \"../../store/selectors\";\r\n\r\nfunction Table({ type }) {\r\n  const { entrance } = useSelector(entrancesSelector);\r\n\r\n  const { isReverseTable, fontSize, currentEntarance } =\r\n    useSelector(settingsSelector);\r\n\r\n  const current = entrance[currentEntarance].long;\r\n\r\n  const ladder = isReverseTable ? [...current].reverse() : current;\r\n\r\n  return (\r\n    <>\r\n      {ladder.map((elem) => {\r\n        return (\r\n          <Line\r\n            style={{ fontSize: fontSize }}\r\n            type={type}\r\n            key={elem.floor+elem.roomEnd}\r\n            thisFloor={elem}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport logo_img from \"../../images/logo_img.svg\";\r\nimport logo_text from \"../../images/logo_text.svg\";\r\n\r\nfunction AddLogo({ logoRef, width }) {\r\n  function logoCorrector(size) {\r\n    if (size < 180) return \"small_logo\";\r\n    else if (size >= 180 && size < 245) return \"medium_logo\";\r\n    else return \"big_logo\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={logoRef}\r\n      className={\"standart_logo flex row \" + logoCorrector(width)}\r\n    >\r\n      <img className=\"logo_img\" alt=\"logo_img\" src={logo_img}></img>\r\n      <img className=\"logo_text\" alt=\"logo_text\" src={logo_text}></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddLogo;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst settingSlice = createSlice({\r\n  name: \"settingSlice\",\r\n  initialState: {\r\n    adressSize: 52,\r\n    haveAdress: true,\r\n    haveLadderNum: true,\r\n    haveTableTop: true,\r\n    isReverseTable: false,\r\n    currentEntarance: \"1\",\r\n    headType: \"Парадная №\",\r\n    headTypes: [\r\n      \"Парадная №\",\r\n      \"Парадная \",\r\n      \"Лестница №\",\r\n      \"Подъезд №\",\r\n      \"Секция \",\r\n    ],\r\n    fontSize: 150,\r\n    streetNameSize: 220,\r\n    streetTypeSize: 130,\r\n    buildingNumberSize: 300,\r\n    buildingNumberIndent: -2,\r\n    streetTypeGap: 10,\r\n  },\r\n  reducers: {\r\n    setStreetNameSize(state, { payload }) {\r\n      state.streetNameSize = payload;\r\n    },\r\n    setStreetTypeSize(state, { payload }) {\r\n      state.streetTypeSize = payload;\r\n    },\r\n    setBuildingNumberSize(state, { payload }) {\r\n      state.buildingNumberSize = payload;\r\n    },\r\n    setBuildingNumberIndent(state, { payload }) {\r\n      state.buildingNumberIndent = payload;\r\n    },\r\n    setStreetTypeGap(state, { payload }) {\r\n      state.streetTypeGap = payload;\r\n    },\r\n\r\n    setAdressSize(state, { payload }) {\r\n      state.adressSize = payload;\r\n    },\r\n    AdressSizeDecriment(state) {\r\n      state.adressSize = state.adressSize + 1;\r\n    },\r\n    AdressSizeIncriment(state) {\r\n      state.adressSize = state.adressSize - 1;\r\n    },\r\n    setHaveAdress(state) {\r\n      state.haveAdress = !state.haveAdress;\r\n    },\r\n    setHaveLadderNum(state) {\r\n      state.haveLadderNum = !state.haveLadderNum;\r\n    },\r\n    setHaveTableTop(state) {\r\n      state.haveTableTop = !state.haveTableTop;\r\n    },\r\n    setIsReverseTable(state) {\r\n      state.isReverseTable = !state.isReverseTable;\r\n    },\r\n    setCurrentEntarance(state, action) {\r\n      state.currentEntarance = action.payload;\r\n    },\r\n    setHeadType(state, { payload }) {\r\n      state.headType = payload;\r\n    },\r\n    setFontSize(state, { payload }) {\r\n      state.fontSize = payload;\r\n    },\r\n    changeFontSize(state, { payload }) {\r\n      state.fontSize = state.fontSize + payload;\r\n    },\r\n    addHeadTypes(state, { payload }) {\r\n      state.headTypes = [...state.headTypes, payload];\r\n    },\r\n  },\r\n});\r\n\r\nexport default settingSlice.reducer;\r\n\r\nexport const {\r\n  setAdressSize,\r\n  setHaveAdress,\r\n  setHaveLadderNum,\r\n  AdressSizeIncriment,\r\n  AdressSizeDecriment,\r\n  setIsReverseTable,\r\n  setCurrentEntarance,\r\n  setHeadType,\r\n  setHaveTableTop,\r\n  setIdealSize,\r\n  setFontSize,\r\n  changeFontSize,\r\n  setStreetNameSize,\r\n  setStreetTypeSize,\r\n  setBuildingNumberSize,\r\n  setBuildingNumberIndent,\r\n  setStreetTypeGap,\r\n  addHeadTypes,\r\n} = settingSlice.actions;\r\n","export function paddingCorrector(width) {\r\n  if (width < 200) return \"small_table\";\r\n  else if (200 < width < 270) return \"medium_table\";\r\n  else return \"big_table\";\r\n}","import React from \"react\";\r\nimport { tableSelector } from \"../../store/selectors\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction ColorBackGround() {\r\n  const { allTableSize, currentTableSize } = useSelector(tableSelector);\r\n  const height = allTableSize[currentTableSize].height;\r\n  const width = allTableSize[currentTableSize].width;\r\n  const type = allTableSize[currentTableSize].type;\r\n  return (\r\n    <>\r\n      {type === \"sticker\" ? (\r\n        <>\r\n          <div\r\n            className=\"black absolute z3\"\r\n            style={{\r\n              height: height / 7 + \"mm\",\r\n              width: width + \"mm\",\r\n            }}\r\n          ></div>\r\n          <div\r\n            className=\" zeroSize absolute z3\"\r\n            style={{\r\n              borderTop: width * 0.6 + `mm solid rgb(51,51,50)`,\r\n              borderRight: `${width}mm solid transparent`,\r\n              top: height / 7 + 2 + \"mm\",\r\n            }}\r\n          ></div>\r\n\r\n          <div\r\n            className=\"green absolute z1\"\r\n            style={{\r\n              height: height / 2 + \"mm\",\r\n              width: width + \"mm\",\r\n              top: \"22mm\",\r\n            }}\r\n          ></div>\r\n          <div\r\n            className=\" zeroSize absolute z1\"\r\n            style={{\r\n              borderTop: width * 0.6 + `mm solid rgb(94,176,50)`,\r\n              borderRight: `${width}mm solid transparent`,\r\n              top: height / 2 + 22 + \"mm\",\r\n            }}\r\n          ></div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ColorBackGround;\r\n","import React from \"react\";\r\n\r\nfunction TopLine({ haveTableHead, type }) {\r\n  const styleType = type === \"sticker\" ? \"base_white_black \" : \"base_blue_white \";\r\n  return (\r\n    <>\r\n      {haveTableHead && (\r\n        <div className=\"flex row top line\">\r\n          <div className={styleType + \"base flex collumn1\"}>этаж</div>\r\n          <div className={styleType + \"base flex collumn2\"}>квартиры</div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TopLine;\r\n","import React, { createRef, useEffect } from \"react\";\r\nimport Adress from \"./Adress\";\r\nimport LadderNum from \"./LadderNum\";\r\nimport Table from \"./Table\";\r\nimport AddLogo from \"./AddLogo\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeFontSize } from \"../../store/reducers/settingSlice\";\r\nimport {\r\n  settingsSelector,\r\n  entrancesSelector,\r\n  tableSelector,\r\n} from \"../../store/selectors\";\r\nimport { tableSizeCorrector } from \"../../function/tableSizeCorrector\";\r\nimport { paddingCorrector } from \"../../function/paddingCorrector\";\r\nimport ColorBackGround from \"./ColorBackGround\";\r\nimport TopLine from \"./TopLine\";\r\n\r\nfunction FullTable() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    haveAdress,\r\n    currentEntarance,\r\n    headType,\r\n    haveTableTop,\r\n    haveLadderNum,\r\n    adressSize,\r\n    fontSize,\r\n  } = useSelector(settingsSelector);\r\n  const { adress, entrance } = useSelector(entrancesSelector);\r\n  const { allTableSize, currentTableSize } = useSelector(tableSelector);\r\n\r\n  const logoRef = createRef();\r\n  const allTableRef = createRef();\r\n\r\n  const height = allTableSize[currentTableSize].height;\r\n  const width = allTableSize[currentTableSize].width;\r\n  const type = allTableSize[currentTableSize].type;\r\n\r\n  useEffect(() => {\r\n    const logo = logoRef.current;\r\n    const table = allTableRef.current;\r\n    const correctHeight = logo.offsetTop + logo.clientHeight; //растояние до логотипа\r\n    const tableHeight = table.offsetTop + table.getBoundingClientRect().height; //растояние до низа всей таблицы\r\n    dispatch(\r\n      changeFontSize(tableSizeCorrector(tableHeight, correctHeight, fontSize))\r\n    );\r\n  }, [fontSize, currentEntarance, currentTableSize, entrance, adressSize]);\r\n\r\n  useEffect(() => {\r\n    document.title = `${adress}_п№_${currentEntarance}_${width}_${height}`;\r\n  }, [currentEntarance, width, height, adress]);\r\n\r\n  return (\r\n    <div\r\n    id=\"page\"\r\n      className=\"flex\"\r\n      style={{\r\n        width: width + \"mm\",\r\n        height: height + \"mm\",\r\n      }}\r\n    >\r\n      <ColorBackGround />\r\n      <div\r\n        ref={allTableRef}\r\n        className={\r\n          \"full__table flex collumn w100 z5 \" + paddingCorrector(width)\r\n        }\r\n      >\r\n        <Adress type={type} adress={adress} haveAdress={haveAdress} />\r\n\r\n        <LadderNum\r\n          width={width}\r\n          ladderN={currentEntarance}\r\n          headType={headType}\r\n          type={type}\r\n          haveLadderNum={haveLadderNum}\r\n        />\r\n        <TopLine type={type} haveTableHead={haveTableTop} />\r\n        <Table type={type} />\r\n        <AddLogo width={width} logoRef={logoRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default FullTable;\r\n","export function tableSizeCorrector(tableHeight, correctHeight, fontSize) {\r\n  if (tableHeight - correctHeight > 200) {\r\n    return 5;\r\n  } else if (tableHeight - correctHeight > 120 && fontSize < 120) {\r\n    return 3;\r\n  } else if (tableHeight - correctHeight > 15 && fontSize < 120) {\r\n    return 1;\r\n  } else if (tableHeight - correctHeight < -70) {\r\n    return -3;\r\n  } else if (tableHeight - correctHeight < -20) {\r\n    return -1;\r\n  } else return 0;\r\n}\r\n","import React from \"react\";\r\n\r\nfunction MyRadio({ val, callBack, children, current }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"radio\"\r\n        value={val}\r\n        onChange={callBack}\r\n        checked={val === current ? true : false}\r\n      />\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyRadio;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst tableSettingsSlice = createSlice({\r\n  name: \"tableSettingsSlice\",\r\n  initialState: {\r\n    allTableSize: [\r\n      { width: 200, height: 400, type: \"pvc\" },\r\n      { width: 250, height: 500, type: \"pvc\" },\r\n      { width: 250, height: 600, type: \"pvc\" },\r\n      { width: 148, height: 297, type: \"sticker\" },\r\n    ],\r\n    currentTableSize: 1,\r\n    currentType: \"pvc\",\r\n  },\r\n  reducers: {\r\n    addTableSize(state, { payload }) {\r\n      state.allTableSize = [...state.allTableSize, payload];\r\n    },\r\n    setCurrentTableSize(state, { payload }) {\r\n      state.currentTableSize = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default tableSettingsSlice.reducer;\r\n\r\nexport const { addTableSize, setCurrentTableSize } = tableSettingsSlice.actions;\r\n","import React, { useState } from \"react\";\r\nimport MyRadio from \"../Table/MyRadio\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addTableSize,\r\n  setCurrentTableSize,\r\n} from \"../../store/reducers/tableSettingsSlice\";\r\nimport { setFontSize } from \"../../store/reducers/settingSlice\";\r\nimport { tableSelector } from \"../../store/selectors\";\r\n\r\nfunction TableSettings() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addButton, setAddButton] = useState(true);\r\n  const [tableType, setTableType] = useState(\"pvc\");\r\n\r\n  const { currentTableSize, allTableSize } = useSelector(tableSelector);\r\n\r\n  function setTablewidthHandler(e) {\r\n    dispatch(setCurrentTableSize(+e.target.value));\r\n    dispatch(setFontSize(110));\r\n  }\r\n\r\n  function addTogle() {\r\n    setAddButton((prev) => !prev);\r\n  }\r\n\r\n  function addHandler(event) {\r\n    const target = event.target;\r\n    event.preventDefault();\r\n    const width = target.width.value;\r\n    const height = target.height.value;\r\n    const type = target.type.value;\r\n    dispatch(addTableSize({ width: width, height: height, type: type }));\r\n    addTogle();\r\n  }\r\n\r\n  function inputHandler(event) {\r\n    const target = event.target;\r\n    setTableType(target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>выбор таблички</div>\r\n      {allTableSize.map((elem, index) => {\r\n        return (\r\n          <MyRadio\r\n            key={elem.width + \"\" + elem.height + index}\r\n            val={index}\r\n            callBack={setTablewidthHandler}\r\n            current={currentTableSize}\r\n          >\r\n            шир: {elem.width} выс: {elem.height} тип:\r\n            {elem.type === \"sticker\" ? \" наклейка\" : \" табличка\"}\r\n          </MyRadio>\r\n        );\r\n      })}\r\n      <div>свой вариант:</div>\r\n\r\n      {addButton ? <button onClick={addTogle}>добавить</button> : <></>}\r\n      {addButton ? (\r\n        <></>\r\n      ) : (\r\n        <form onSubmit={addHandler}>\r\n          <input name=\"width\" type=\"text\" placeholder=\"ширина\"></input>\r\n          <input name=\"height\" type=\"text\" placeholder=\"высота\"></input>\r\n          <div>\r\n            <input\r\n              name=\"type\"\r\n              type=\"radio\"\r\n              onChange={inputHandler}\r\n              value=\"pvc\"\r\n              checked={\"pvc\" === tableType ? true : false}\r\n            ></input>\r\n            пвх\r\n            <input\r\n              name=\"type\"\r\n              type=\"radio\"\r\n              onChange={inputHandler}\r\n              value=\"sticker\"\r\n              checked={\"sticker\" === tableType ? true : false}\r\n            ></input>\r\n            наклейка\r\n          </div>\r\n\r\n          <button>Добавить</button>\r\n        </form>\r\n      )}\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableSettings;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst entriesSlice = createSlice({\r\n  name: \"entries\",\r\n  initialState: {\r\n    adress: \"ул. Репищева 20\",\r\n    streetName: \"репищева\",\r\n    streetType: \"улица\",\r\n    buildingNumber: \"20\",\r\n    entrance: {\r\n      1: {\r\n        long: [\r\n          { floor: 1, roomStart: 1, roomEnd: 2 },\r\n          { floor: 2, roomStart: 3, roomEnd: 4 },\r\n          { floor: 3, roomStart: 5, roomEnd: 6 },\r\n          { floor: 4, roomStart: 7, roomEnd: 8 },\r\n          { floor: 5, roomStart: 9, roomEnd: 10 },\r\n          { floor: 6, roomStart: 11, roomEnd: 12 },\r\n          { floor: 7, roomStart: 13, roomEnd: 14 },\r\n          { floor: 8, roomStart: 15, roomEnd: 16 },\r\n        ],\r\n        short: { start: 1, end: 16 },\r\n      },\r\n      2: {\r\n        long: [\r\n          { floor: 1, roomStart: 17, roomEnd: 18 },\r\n          { floor: 2, roomStart: 19, roomEnd: 20 },\r\n          { floor: 3, roomStart: 21, roomEnd: 22 },\r\n          { floor: 4, roomStart: 23, roomEnd: 24 },\r\n          { floor: 5, roomStart: 25, roomEnd: 26 },\r\n          { floor: 6, roomStart: 27, roomEnd: 28 },\r\n          { floor: 7, roomStart: 29, roomEnd: 30 },\r\n        ],\r\n        short: { start: 17, end: 30 },\r\n      },\r\n    },\r\n    allEntrances: [\"1\", \"2\"],\r\n  },\r\n  reducers: {\r\n    setAdress(state, action) {\r\n      state.adress = action.payload;\r\n    },\r\n    setEntarance(state, action) {\r\n      state.entrance = action.payload;\r\n    },\r\n    setAllEntarence(state, action) {\r\n      state.allEntrances = action.payload;\r\n    },\r\n    setBuildingNumber(state, { payload }) {\r\n      state.buildingNumber = payload;\r\n    },\r\n    setStreetType(state, { payload }) {\r\n      state.streetType = payload;\r\n    },\r\n    setStreetName(state, { payload }) {\r\n      state.streetName = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default entriesSlice.reducer;\r\n\r\nexport const {\r\n  setAdress,\r\n  setEntarance,\r\n  setAllEntarence,\r\n  setStreetName,\r\n  setStreetType,\r\n  setBuildingNumber,\r\n} = entriesSlice.actions;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  setAdress,\r\n  setAllEntarence,\r\n  setBuildingNumber,\r\n  setEntarance,\r\n  setStreetName,\r\n  setStreetType,\r\n} from \"../../store/reducers/entrancesSlice\";\r\nimport {\r\n  setCurrentEntarance,\r\n  setFontSize,\r\n} from \"../../store/reducers/settingSlice\";\r\nimport styles from \"./laddernamesettings.module.css\"\r\n\r\nfunction EntaranceInput() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [inputData, setInputData] = useState(\"\");\r\n\r\n  function inputDataHandler(e) {\r\n    setInputData(e.target.value);\r\n  }\r\n\r\n  const changeInput = (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const parse = JSON.parse(inputData);\r\n      const entranceCount = Object.keys(parse.entrance);\r\n      if (parse.entrance[entranceCount[0]].long[0] === undefined) {\r\n        delete parse.entrance[entranceCount[0]];\r\n      }\r\n      dispatch(setBuildingNumber(parse.buildingNumber));\r\n      dispatch(setStreetType(parse.streetType.toLowerCase()));\r\n      dispatch(setStreetName(parse.streetName));\r\n      dispatch(setAdress(parse.adress));\r\n      dispatch(setEntarance(parse.entrance));\r\n      dispatch(setAllEntarence(Object.keys(parse.entrance)));\r\n      dispatch(setCurrentEntarance(Object.keys(parse.entrance)[0]));\r\n      dispatch(setFontSize(150));\r\n      setInputData(\"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      Введи данные из экселя:\r\n      <form\r\n      className={styles.form} onSubmit={changeInput}>\r\n        <input\r\n          placeholder=\"данные из exel\"\r\n          type=\"text\"\r\n          value={inputData}\r\n          onChange={inputDataHandler}\r\n        />\r\n        <button type=\"submit\">ввести</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EntaranceInput;\r\n","import React from \"react\";\r\n\r\nfunction MyCheckBox({ value, callBack, children }) {\r\n  return (\r\n    <div>\r\n      <input type=\"checkbox\" checked={value} onChange={callBack} />\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyCheckBox;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setHaveAdress,\r\n  setHaveLadderNum,\r\n  setHaveTableTop,\r\n  setIsReverseTable,\r\n  setFontSize,\r\n} from \"../../store/reducers/settingSlice\";\r\nimport MyCheckBox from \"../MyCheckBox\";\r\nimport { settingsSelector } from \"../../store/selectors\";\r\n\r\nfunction TableHeadSettings() {\r\n  const dispatch = useDispatch();\r\n  const { haveAdress, haveLadderNum, haveTableTop, isReverseTable } =\r\n    useSelector(settingsSelector);\r\n\r\n  const onclickHandler = (func) => {\r\n    dispatch(func());\r\n    dispatch(setFontSize(150));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      Настройки:\r\n      <MyCheckBox\r\n        value={haveAdress}\r\n        callBack={() => onclickHandler(setHaveAdress)}\r\n      >\r\n        Нужен адресс?\r\n      </MyCheckBox>\r\n      <MyCheckBox\r\n        value={haveLadderNum}\r\n        callBack={() => onclickHandler(setHaveLadderNum)}\r\n      >\r\n        Нужна парадная?\r\n      </MyCheckBox>\r\n      <MyCheckBox\r\n        value={haveTableTop}\r\n        callBack={() => onclickHandler(setHaveTableTop)}\r\n      >\r\n        Нужен заголовок этаж квартира?\r\n      </MyCheckBox>\r\n      <MyCheckBox\r\n        value={isReverseTable}\r\n        callBack={() => onclickHandler(setIsReverseTable)}\r\n      >\r\n        Перевернуть таблицу\r\n      </MyCheckBox>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableHeadSettings;\r\n","import React, { useState } from \"react\";\r\nimport MyRadio from \"../Table/MyRadio\";\r\nimport { addHeadTypes, setHeadType } from \"../../store/reducers/settingSlice\";\r\nimport { settingsSelector } from \"../../store/selectors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styles from \"./laddernamesettings.module.css\";\r\n\r\nfunction LadderNameSettings(props) {\r\n  const dispatch = useDispatch();\r\n  const { headType, headTypes } = useSelector(settingsSelector);\r\n  const [newType, setNewType] = useState(\"\");\r\n\r\n  const typesHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addHeadTypes(e.target.types.value));\r\n    setNewType(\"\");\r\n  };\r\n\r\n  const headTypeHandler = (e) => {\r\n    dispatch(setHeadType(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      Выбери тип названия парадной:\r\n      {headTypes.map((elem) => {\r\n        return (\r\n          <MyRadio\r\n            key={elem}\r\n            callBack={headTypeHandler}\r\n            current={headType}\r\n            val={elem}\r\n          >\r\n            {elem}\r\n          </MyRadio>\r\n        );\r\n      })}\r\n      <form className={styles.form} onSubmit={typesHandler}>\r\n        <input\r\n          name=\"types\"\r\n          value={newType}\r\n          onChange={(e) => setNewType(e.target.value)}\r\n          placeholder=\"добавить свое\"\r\n        ></input>\r\n        <button type=\"submit\">добавить</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LadderNameSettings;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  AdressSizeDecriment,\r\n  AdressSizeIncriment,\r\n  setAdressSize,\r\n} from \"../../store/reducers/settingSlice\";\r\nimport styles from  \"./sizesettings.module.css\"\r\nimport { settingsSelector } from \"../../store/selectors\";\r\n\r\nfunction SizeSettings() {\r\n  const dispatch = useDispatch();\r\n  const { adressSize } = useSelector(settingsSelector);\r\n  const [inputData, setInputData] = useState(adressSize);\r\n\r\n  function inputDataHandler({ target: { value } }) {\r\n    setInputData(value);\r\n  }\r\n\r\n  const submitInput = (event) => {\r\n    event.preventDefault();\r\n    dispatch(setAdressSize(Number(inputData)));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      размер адреса:\r\n      <form onSubmit={submitInput}>\r\n        <input\r\n          placeholder=\"шрифт адреса\"\r\n          type=\"number\"\r\n          value={inputData}\r\n          onChange={inputDataHandler}\r\n        />\r\n        <button type=\"submit\">ввести</button>\r\n      </form>\r\n      <div style={{ width: \"100%\" }}>\r\n        <button\r\n          style={{ width: \"50%\" }}\r\n          onClick={() => {\r\n            dispatch(AdressSizeIncriment());\r\n            setInputData((prev) => +prev - 1);\r\n          }}\r\n        >\r\n          - -\r\n        </button>\r\n        <button\r\n          style={{ width: \"50%\" }}\r\n          onClick={() => {\r\n            dispatch(AdressSizeDecriment());\r\n            setInputData((prev) => +prev + 1);\r\n          }}\r\n        >\r\n          + +\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SizeSettings;\r\n","import React from \"react\";\r\nimport MyRadio from \"../Table/MyRadio\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setCurrentEntarance,\r\n  setFontSize,\r\n} from \"../../store/reducers/settingSlice\";\r\n\r\nimport { entrancesSelector, settingsSelector } from \"../../store/selectors\";\r\n\r\nfunction ChoseEntarance() {\r\n  const dispatch = useDispatch();\r\n  const currentEntaranceHandler = (e) => {\r\n    dispatch(setCurrentEntarance(e.target.value));\r\n    dispatch(setFontSize(150));\r\n  };\r\n  const { currentEntarance } = useSelector(settingsSelector);\r\n  const { allEntrances } = useSelector(entrancesSelector);\r\n\r\n  return (\r\n    <div>\r\n      Выбор парадной:\r\n      {allEntrances.map((elem) => {\r\n        return (\r\n          <MyRadio\r\n            callBack={currentEntaranceHandler}\r\n            current={currentEntarance}\r\n            val={elem}\r\n            key={elem}\r\n          >\r\n            парадная № <strong>{elem}</strong>\r\n          </MyRadio>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChoseEntarance;\r\n","import React from \"react\";\r\nimport Instruction from \"../Components/Instruction/Instruction\";\r\nimport FullTable from \"../Components/Table/FullTable\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {tableSelector} from \"../store/selectors\";\r\nimport TableSettings from \"../Components/Settings/TableSettings\";\r\nimport EntaranceInput from \"../Components/Settings/EntaranceInput\";\r\nimport TableHeadSettings from \"../Components/Settings/TableHeadSettings\";\r\nimport LadderNameSettings from \"../Components/Settings/LadderNameSettings\";\r\nimport SizeSettings from \"../Components/Settings/SizeSettings\";\r\nimport ChoseEntarance from \"../Components/Settings/ChoseEntarance\";\r\n\r\nimport styles from \"./style.module.css\";\r\n\r\nimport print from \"./printhide.module.css\";\r\n\r\nfunction EnteranceTablePage() {\r\n    const {allTableSize, currentTableSize} = useSelector(tableSelector);\r\n\r\n    const height = allTableSize[currentTableSize].height;\r\n    const width = allTableSize[currentTableSize].width;\r\n\r\n\r\n    return (\r\n        <div className={styles.container_horizontal}>\r\n            <FullTable/>\r\n            <div className={print.print_hide + \" \" + styles.settings}>\r\n                <TableSettings/>\r\n                <div>...................</div>\r\n                <EntaranceInput/>\r\n                <div>...................</div>\r\n                <TableHeadSettings/>\r\n                <div>...................</div>\r\n                <LadderNameSettings/>\r\n                <div>...................</div>\r\n                <SizeSettings/>\r\n                <div>...................</div>\r\n                <ChoseEntarance/>\r\n            </div>\r\n\r\n            <Instruction orientering=\"vertical\" height={height} width={width}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EnteranceTablePage;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport style from \"./landing.module.css\";\r\n\r\nfunction LandingPage() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className={style.container}>\r\n      <button\r\n        className={style.button}\r\n        onClick={() => navigate(\"/enteranceTable\", { replace: false })}\r\n      >\r\n        Квартирные указатели\r\n      </button>\r\n      <button onClick={() => navigate(\"/small_table\", { replace: false })}>\r\n        маленький квартирный указатель\r\n      </button>\r\n      <button onClick={() => navigate(\"/big_number\", { replace: false })}>\r\n        квартирный указатель с большой цифрой\r\n      </button>\r\n      <button onClick={() => navigate(\"/adressTable\", { replace: false })}>\r\n        Адресный указатель\r\n      </button>\r\n      <button onClick={() => navigate(\"/rooms_counter\", { replace: false })}>\r\n        Вывод квартир в рандоме\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { entrancesSelector, settingsSelector } from '../../store/selectors';\r\n\r\nfunction ShortEnterance() {\r\n\r\nconst {entrance} = useSelector(entrancesSelector)\r\nconst {currentEntarance}= useSelector(settingsSelector)\r\nconst start = entrance[currentEntarance].short.start\r\nconst end = entrance[currentEntarance].short.end\r\n\r\n  return (\r\n    <div>\r\n      КВ. {start} – {end}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShortEnterance;","import React from \"react\";\r\nimport Adress from \"../Table/Adress\";\r\nimport LadderNum from \"../Table/LadderNum\";\r\nimport ShortEnterance from \"./ShortEnterance\";\r\nimport style from \"./smalltable.module.css\";\r\nimport logo_img from \"../../images/logo_img.svg\";\r\nimport logo_text from \"../../images/logo_text.svg\";\r\n\r\nfunction SmallTable() {\r\n  return (\r\n    <div className={style.full_table}>\r\n      <div className={style.container}>\r\n        <div className={style.content_container}>\r\n          <div className={style.adress}>\r\n            <Adress haveAdress={true} />\r\n          </div>\r\n          <div className={style.bottom_container}>\r\n            <div className={style.ladder_number}>\r\n              <LadderNum haveLadderNum={true} width={210} />\r\n            </div>\r\n            <div className={style.rooms}>\r\n              <ShortEnterance />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={style.logo_container}>\r\n          <img className={style.logo_img} alt=\"logo_img\" src={logo_img}></img>\r\n          <img\r\n            className={style.logo_text}\r\n            alt=\"logo_text\"\r\n            src={logo_text}\r\n          ></img>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SmallTable;\r\n","import React, { useEffect } from \"react\";\r\nimport Instruction from \"../Components/Instruction/Instruction\";\r\nimport EntaranceInput from \"../Components/Settings/EntaranceInput\";\r\nimport SmallTable from \"../Components/SmallTable/SmallTable\";\r\n\r\nimport SizeSettings from \"../Components/Settings/SizeSettings\";\r\nimport ChoseEntarance from \"../Components/Settings/ChoseEntarance\";\r\n\r\nimport LadderNameSettings from \"../Components/Settings/LadderNameSettings\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { entrancesSelector, settingsSelector } from \"../store/selectors\";\r\nimport print from \"./printhide.module.css\";\r\nimport styles from \"./style.module.css\"\r\n\r\nfunction SmallTablePage() {\r\n  const { adress } = useSelector(entrancesSelector);\r\n  const { currentEntarance } = useSelector(settingsSelector);\r\n\r\n  useEffect(() => {\r\n    document.title = `${adress}_п№${currentEntarance}_210_148`;\r\n  }, [currentEntarance, adress]);\r\n\r\n  return (\r\n    <div className=\"flex row\" style={{ gap: \"10mm\" }}>\r\n      <SmallTable />\r\n      <div className={(print.print_hide+\" \"+ styles.settings)}>\r\n        <EntaranceInput />\r\n        <div>...................</div>\r\n        <LadderNameSettings />\r\n        <div>...................</div>\r\n        <SizeSettings />\r\n        <div>...................</div>\r\n        <ChoseEntarance />\r\n      </div>\r\n      \r\n      <Instruction orientering=\"vertical\" width={210} height={148} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SmallTablePage;\r\n","import React from \"react\";\r\n\r\nfunction AdressLetter({ children }) {\r\n  return <div>{children}</div>;\r\n}\r\n\r\nexport default AdressLetter;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { entrancesSelector } from \"../../store/selectors\";\r\nimport AdressLetter from \"./AdressLetter\";\r\n\r\nfunction FullAdressName() {\r\n  const { streetName } = useSelector(entrancesSelector);\r\n\r\n  return (\r\n    <>\r\n      {streetName\r\n        .toUpperCase()\r\n        .split(\"\")\r\n        .map((elem, index) => {\r\n          return <AdressLetter key={elem + index}>{elem}</AdressLetter>;\r\n        })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FullAdressName;\r\n","import React, { useEffect } from \"react\";\r\nimport FullAdressName from \"./FullAdressName\";\r\nimport { entrancesSelector, settingsSelector } from \"../../store/selectors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport logo_img from \"../../images/logo_img.svg\";\r\nimport logo_text from \"../../images/logo_text.svg\";\r\nimport AdressLetter from \"./AdressLetter\";\r\nimport style from \"./Fulladress.module.css\";\r\n\r\nfunction FullAdressTable() {\r\n  const { adress, streetName, streetType, buildingNumber } =\r\n    useSelector(entrancesSelector);\r\n  const {\r\n    streetNameSize,\r\n    streetTypeSize,\r\n    buildingNumberSize,\r\n    buildingNumberIndent,\r\n    streetTypeGap,\r\n  } = useSelector(settingsSelector);\r\n\r\n  useEffect(() => {\r\n    document.title = `${adress}_600_250`;\r\n  }, [streetName, streetType, buildingNumber, adress]);\r\n\r\n  return (\r\n    <div className={style.full_table}>\r\n      <div className={style.table_container}>\r\n        <div className={style.adress_container}>\r\n          <div\r\n            className={style.adress_name}\r\n            style={{\r\n              fontSize: `${streetNameSize}pt`,\r\n            }}\r\n          >\r\n            <FullAdressName />\r\n          </div>\r\n        </div>\r\n        <div className={style.bottom}>\r\n          <div className={style.typeAndLogo}>\r\n            <div className={style.type}>\r\n              <div\r\n                style={{\r\n                  fontSize: `${streetTypeSize}pt`,\r\n                  letterSpacing: `${streetTypeGap}mm`,\r\n                }}\r\n                className={style.typeContent}\r\n              >\r\n                {streetType}\r\n              </div>\r\n            </div>\r\n            <div className={style.logo}>\r\n              <img className=\"logo_img\" alt=\"logo_img\" src={logo_img}></img>\r\n              <img className=\"logo_text\" alt=\"logo_text\" src={logo_text}></img>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={style.number}\r\n            style={{\r\n              fontSize: `${buildingNumberSize}pt`,\r\n              marginRight: buildingNumberIndent + 16 + \"mm\",\r\n            }}\r\n          >\r\n            <div className={style.numberContent}>\r\n              {buildingNumber\r\n                .toLowerCase()\r\n                .split(\"\")\r\n                .map((elem, index) => {\r\n                  return <AdressLetter key={elem + index}>{elem}</AdressLetter>;\r\n                })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FullAdressTable;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setStreetNameSize,\r\n  setStreetTypeSize,\r\n  setBuildingNumberSize,\r\n  setBuildingNumberIndent,\r\n  setStreetTypeGap,\r\n} from \"../../store/reducers/settingSlice\";\r\nimport { settingsSelector } from \"../../store/selectors\";\r\n\r\nfunction AdressSizeSettings() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    streetNameSize,\r\n    streetTypeSize,\r\n    buildingNumberSize,\r\n    buildingNumberIndent,\r\n    streetTypeGap,\r\n  } = useSelector(settingsSelector);\r\n\r\n  const [streetNameSizeState, setStreetNameSizeState] =\r\n    useState(streetNameSize);\r\n  const [streetTypeSizeState, setStreetTypeSizeState] =\r\n    useState(streetTypeSize);\r\n  const [buildingNumberSizeState, setBuildingNumberSizeState] =\r\n    useState(buildingNumberSize);\r\n  const [buildingNumberIndentState, setBuildingNumberIndentState] =\r\n    useState(buildingNumberIndent);\r\n  const [streetTypeGapState, setStreetTypeGapState] = useState(streetTypeGap);\r\n\r\n  function streetNameSizeHandler(event) {\r\n    setStreetNameSizeState(event.target.value);\r\n  }\r\n  function streetTypeSizeHandler(event) {\r\n    setStreetTypeSizeState(event.target.value);\r\n  }\r\n  function setBuildingNumberSizeHandler(event) {\r\n    setBuildingNumberSizeState(event.target.value);\r\n  }\r\n  function setBuildingNumberIndentHandler(event) {\r\n    setBuildingNumberIndentState(event.target.value);\r\n  }\r\n  function setStreetTypeGapHandler(event) {\r\n    setStreetTypeGapState(event.target.value);\r\n  }\r\n\r\n  function submitHendler(event) {\r\n    event.preventDefault();\r\n    dispatch(setStreetNameSize(Number(streetNameSizeState)));\r\n    dispatch(setStreetTypeSize(Number(streetTypeSizeState)));\r\n    dispatch(setBuildingNumberSize(Number(buildingNumberSizeState)));\r\n    dispatch(setBuildingNumberIndent(Number(buildingNumberIndentState)));\r\n    dispatch(setStreetTypeGap(Number(streetTypeGapState)));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={submitHendler}\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}\r\n      >\r\n        размер названия улицы:\r\n        <input\r\n          placeholder=\"шрифт адреса\"\r\n          type=\"number\"\r\n          value={streetNameSizeState}\r\n          onChange={streetNameSizeHandler}\r\n        />\r\n        размер типа улицы:\r\n        <input\r\n          placeholder=\"шрифт адреса\"\r\n          type=\"number\"\r\n          value={streetTypeSizeState}\r\n          onChange={streetTypeSizeHandler}\r\n        />\r\n        размер номера дома:\r\n        <input\r\n          placeholder=\"шрифт номера дома\"\r\n          type=\"number\"\r\n          value={buildingNumberSizeState}\r\n          onChange={setBuildingNumberSizeHandler}\r\n        />\r\n        отступ в номере дома:\r\n        <input\r\n          placeholder=\"отступ в номере дома\"\r\n          type=\"text\"\r\n          value={buildingNumberIndentState}\r\n          onChange={setBuildingNumberIndentHandler}\r\n        />\r\n        пробелы в типе дома\r\n        <input\r\n          placeholder=\"пробелы в типе дома\"\r\n          type=\"number\"\r\n          value={streetTypeGapState}\r\n          onChange={setStreetTypeGapHandler}\r\n        />\r\n        <button type=\"submit\">ввести</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdressSizeSettings;\r\n","import React from \"react\";\r\nimport EntaranceInput from \"../Components/Settings/EntaranceInput\";\r\nimport Instruction from \"../Components/Instruction/Instruction\";\r\nimport FullAdressTable from \"../Components/AdressTable/FullAdressTable\";\r\nimport AdressSizeSettings from \"../Components/Settings/AdressSizeSettings\";\r\nimport styles from \"./style.module.css\";\r\nimport print from \"./printhide.module.css\";\r\n\r\nfunction AdressTablePage(props) {\r\n  return (\r\n    <div className={styles.container_vertical}>\r\n      <FullAdressTable />\r\n      <div className={styles.container_horizontal}>\r\n        <div className={(print.print_hide+\" \"+ styles.settings)}>\r\n          <EntaranceInput />\r\n          <div>...................</div>\r\n          <AdressSizeSettings />\r\n        </div>\r\n        \r\n          <Instruction orientering=\"horizontal\" height={250} width={600} />\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdressTablePage;\r\n","import React, { useEffect } from \"react\";\r\nimport AddLogo from \"../Table/AddLogo\";\r\nimport ShortEnterance from \"./ShortEnterance\";\r\nimport { entrancesSelector, settingsSelector } from \"../../store/selectors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport style from \"./bignumber.module.css\";\r\n\r\nfunction BigNumber() {\r\n  const { currentEntarance, headType } = useSelector(settingsSelector);\r\n  const { adress } = useSelector(entrancesSelector);\r\n  useEffect(() => {\r\n    document.title = `${adress}_п№_${currentEntarance}_${210}_${297}`;\r\n  }, [currentEntarance, adress]);\r\n\r\n  return (\r\n    <div className={style.full_table}>\r\n      <div className={style.table_container}>\r\n        <div className={style.table}>\r\n          <div className={style.top_table}>\r\n            <div className={style.ladder_name}>{headType.toUpperCase()}</div>\r\n            <div className={style.big_number}>\r\n              {currentEntarance.toUpperCase()}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={style.short_enterance}>\r\n            <ShortEnterance />\r\n          </div>\r\n        </div>\r\n\r\n        <AddLogo width={210} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BigNumber;\r\n","import React from \"react\";\r\nimport EntaranceInput from \"../Components/Settings/EntaranceInput\";\r\nimport LadderNameSettings from \"../Components/Settings/LadderNameSettings\";\r\nimport ChoseEntarance from \"../Components/Settings/ChoseEntarance\";\r\nimport Instruction from \"../Components/Instruction/Instruction\";\r\nimport BigNumber from \"../Components/SmallTable/BigNumber\";\r\nimport print from \"./printhide.module.css\";\r\nimport styles from \"./style.module.css\"\r\n\r\nfunction BigNumberEnterancePage(props) {\r\n  return (\r\n    <div className={styles.container_horizontal}>\r\n      <BigNumber />\r\n      <div className={(print.print_hide+\" \"+ styles.settings)}>\r\n        <EntaranceInput />\r\n        <div>...................</div>\r\n        <LadderNameSettings />\r\n        <div>...................</div>\r\n        <ChoseEntarance />\r\n      </div>\r\n      <Instruction orientering=\"vertical\" width={210} height={297} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BigNumberEnterancePage;\r\n","function shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n\r\nexport const randomcounter = (count, parts) => {\r\n  if (isNaN(count)) return alert(\"квартироемкость не число\");\r\n  if (isNaN(parts)) return alert(\"количество частей не число\");\r\n  if (!((parts ^ 0) === parts))\r\n    return alert(\"количество частей не целое число\");\r\n  const result = [];\r\n\r\nconst part = []\r\n  for (let i = 1; i <= parts; i++) {\r\n    part.push(i);\r\n  }\r\n\r\n  let allRooms = [];\r\n  for (let i = 1; i <= count; i++) {\r\n    allRooms.push(i);\r\n  }\r\n  shuffle(allRooms);\r\n\r\n  while (allRooms.length)\r\n    result.push(allRooms.splice(0, Math.ceil(count / parts)));\r\n\r\n  let obj = {};\r\n  result.forEach((elem, index) => {\r\n    obj[index + 1] = {\r\n      counts: elem.length,\r\n      apartaments: elem.sort((a, b) => a - b).join(\";\"),\r\n    };\r\n  });\r\n\r\n  return obj;\r\n};\r\n\r\n// console.log(randomcounter(544, 3));\r\n// const input = {\r\n//   adress: \"Коммунаров ул. (Горелово) 188/3\",\r\n//   date: \"05.09.2023\",\r\n//   isFullConnection: \"полностью\",\r\n//   apartmentsCount: \"543\",\r\n// };\r\n\r\n// const output = {\r\n//   adress: \"Коммунаров ул. (Горелово) 188/3\",\r\n//   date: \"05.09.2023\",\r\n//   isFullConnection: \"полностью\",\r\n//   apartmentsCount: \"543\",\r\n//   partCount: \"3\",\r\n//   part1: {\r\n//     counts: \"181\",\r\n//     apartaments:\r\n//       \"4;11;13;16;18;19;20;27;29;30;33;39;40;48;49;50;52;54;55;57;61;63;64;69;76;77;83;84;93;95;99;100;102;103;104;111;112;114;115;119;120;125;130;131;132;134;141;143;159;165;168;183;189;192;193;194;197;198;200;201;204;210;211;212;216;218;224;225;227;228;229;232;235;236;238;239;245;248;253;257;260;265;270;276;278;280;281;285;286;289;290;291;292;295;297;299;305;310;312;314;316;317;318;322;326;327;329;330;331;332;334;335;338;342;347;351;352;360;362;364;365;367;371;382;385;386;388;389;391;392;396;400;401;405;406;408;409;410;411;426;430;434;438;444;445;447;450;461;462;463;464;465;466;472;475;480;481;485;491;493;500;501;506;507;510;511;512;513;514;515;517;518;524;531;533;535;536;537;539;540;543\",\r\n//   },\r\n//   part2: {},\r\n//   part3: {},\r\n// };\r\n","export const createDownloadFile = (data) => {\r\n  const file = `data:text/json;chatset=utf-8,${encodeURIComponent(data)}`;\r\n  const link = document.createElement(\"a\");\r\n  link.href = file;\r\n  link.download = \"data.json\";\r\n  link.click();\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { randomcounter } from \"../function/randomrooms\";\r\nimport { createDownloadFile } from \"../function/createDownloadFile\";\r\n\r\nfunction RoomsCounterRandom() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [complite, setComplite] = useState(\"\");\r\n  const [partCount, setPartCount] = useState(3);\r\n  const inputHandler = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const countHandler = (e) => {\r\n    setPartCount(e.target.value);\r\n  };\r\n  const submitHandler = () => {\r\n    try {\r\n      const value = JSON.parse(inputValue);\r\n      const b = value.map((elem) => {\r\n        return {\r\n          ...elem,\r\n          parts: randomcounter(elem.apartmentsCount, +partCount),\r\n        };\r\n      });\r\n      const jsonString = JSON.stringify(b);\r\n      createDownloadFile(jsonString)\r\n\r\n      setComplite(jsonString);\r\n\r\n      console.log(jsonString);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ fontSize: \"24px\" }}>\r\n      <input\r\n        placeholder=\"count\"\r\n        value={partCount}\r\n        onChange={countHandler}\r\n      ></input>\r\n      <input\r\n        onChange={inputHandler}\r\n        value={inputValue}\r\n        placeholder=\"введи данные\"\r\n      ></input>\r\n      <button onClick={submitHandler}>посчитать</button>\r\n      <div>{complite}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomsCounterRandom;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport EnteranceTablePage from \"./Pages/EnteranceTablePage\";\r\nimport LandingPage from \"./Pages/LandingPage\";\r\nimport SmallTablePage from \"./Pages/SmallTablePage\";\r\nimport AdressTablePage from \"./Pages/AdressTablePage\";\r\nimport BigNumberEnterancePage from \"./Pages/BigNumberEnterancePage\";\r\nimport RoomsCounterRandom from \"./Pages/RoomsCounterRandom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<LandingPage />} />\r\n          <Route path=\"enteranceTable\" element={<EnteranceTablePage />} />\r\n          <Route path=\"adressTable\" element={<AdressTablePage />} />\r\n          <Route path=\"small_table\" element={<SmallTablePage />} />\r\n          <Route path=\"big_number\" element={<BigNumberEnterancePage />} />\r\n          <Route path=\"rooms_counter\" element={<RoomsCounterRandom />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport entrancesSlice from \"./reducers/entrancesSlice\";\r\nimport settingSlice from \"./reducers/settingSlice\";\r\nimport tableSettingsSlice from \"./reducers/tableSettingsSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  entrances: entrancesSlice,\r\n  settings: settingSlice,\r\n  table: tableSettingsSlice,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"./fonts/heliosBold.eot\";\r\nimport \"./fonts/heliosBold1.woff\";\r\nimport \"./fonts/heliosBold2.woff2\";\r\nimport { store } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n"],"sourceRoot":""}